apt-get update
apt-get upgrade
apt-get install sudo

https://serverspace.ru/support/help/debian-install-python/?utm_source=google.com&utm_medium=organic&utm_campaign=google.com&utm_referrer=google.com
Установим python3 новой версии
sudo apt install wget software-properties-common
apt-get install build-essential
apt-get install build-essential libncursesw5-dev libreadline-gplv2-dev libssl-dev libsqlite3-dev tk-dev libc6-dev libbz2-dev libffi-dev -y 

wget https://www.python.org/ftp/python/3.11.3/Python-3.11.3.tgz
tar xvf Python-3.11.3.tgz

cd Python-3.11.3/
./configure --enable-optimizations
самое долгое
make install

cd ..
rm -rf Python-3.1.*


USERCREATE
adduser sw_admin
usermod -aG sudo sw_admin
group sw_admin
su sw_admin

Copy files:
sudo apt install git
git clone ...

environment:
python3 -m venv venv
source venv/bin/activate
pip install -r requirements.txt
pip install gunicorn

sudo apt install postgresql nginx supervisor


sudo -u postgres psql
CREATE DATABASE sneakers;
CREATE USER sw_db_user WITH PASSWORD 'dsadsa321aa';
ALTER ROLE sw_db_user SET client_encoding TO 'utf8';
ALTER ROLE sw_db_user SET default_transaction_isolation TO 'read committed';
ALTER ROLE sw_db_user SET timezone TO 'GMT+5';
GRANT ALL PRIVILEGES ON DATABASE sneakers TO sw_db_user;
\q

vim prod_settings.py
ALLOWED_HOSTS = ['...', '127.0.0.1']

touch .env
# django
SECRET_KEY="django-insecure-x$gpuegl8xhh1!nv!51#@&)04@_4rux^1h36fty32l221)@^_3"


# postgres
POSTGRES_USER="sw_db_user"
POSTGRES_PASSWORD="dsadsa321aa"
POSTGRES_DB="sneakers"
POSTGRES_PORT="5432"
POSTGRES_HOST="127.0.0.1"

DEBUG = False


python manage.py makemigrations
python manage.py migrate

Проверка работы сервера 

gunicorn ecommerce.wsgi:application --bind 45.87.246.104:8000


настроил вим set_mouse= чтобы можно было делать вставку

sudo vim /etc/nginx/sites-available/default 
server {
    listen 80;
    server_name 45.87.246.104;
    access_log /var/log/nginx/example.log;

    location /static {
        alias /home/sw_admin/django-ecommerce/static;
        expires 30d;
    }

    location /media {
        alias /home/sw_admin/django-ecommerce/media;
        expires 30d;
    }

    location / {
        proxy_pass http://127.0.0.1:8000;
        proxy_set_header Host $server_name;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
}

sudo service nginx restart
cd /etc/supervisor/conf.d/
sudo ln /home/sw_admin/django-ecommerce/config/ecommerce.conf

sudo update-rc.d supervisor enable
sudo service supervisor start

sudo supervisorctl reread
sudo supervisorctl update
sudo supervisorctl status

если мы внесли изменения в код:
sudo supervisorctl restart all

python manage.py loaddata data.json


python manage.py collectstatic

ssl sert 
sudo apt install snapd
sudo snap install --classic certbot
sudo ln -s /snap/bin/certbot /usr/bin/certbot

